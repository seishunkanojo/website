---
import { Image } from 'astro:assets';
import spring from "../../assets/img/spring.jpg";
import summer from "../../assets/img/summer.jpeg";
import summer_night from "../../assets/img/summer_night.jpg";
import winter_night from "../../assets/img/winter_night.jpg";

// 画像リストを作成
const imageObjects = [summer, summer_night, spring, winter_night];
---

<!-- スライドショーのラッパ -->
<div class="relative w-full overflow-hidden max-h-screen mt-14 md:mt-0" style="aspect-ratio: 16 / 9;">
  <!-- スライドショー本体 -->
  <div id="slideshow" class="absolute inset-0 w-screen">
    {imageObjects.map((img, index) => (
      <div
        class={`absolute inset-0 w-full h-full transition-opacity duration-1000 ${
          index === 0 ? "opacity-100" : "opacity-0"
        }`}
        style={`z-index: ${imageObjects.length - index};`}
      >
        <Image
          src={img}
          alt={`image-${index}`}
          width={1920}
          height={1080}
          format="webp"
          quality={70}
          class="w-full h-full object-cover"
        />
        <div class="absolute inset-0 bg-gradient-to-r from-black/20 to-transparent"></div>
      </div>
    ))}
  </div>

  <!-- テキスト（見出し） -->
  <div
    class="absolute w-full z-10 flex items-center justify-start px-4 sm:px-8 md:px-16 lg:px-20 xl:px-24 2xl:px-28"
    style="top: 50%;"
  >
    <div class="transform -translate-y-1/2 animate-fade-in">
      <h1
        class="text-black text-lg font-klee font-bold sm:text-2xl md:text-3xl lg:text-4xl xl:text-5xl 2xl:text-6xl
              leading-tight bg-white/70 backdrop-blur-sm p-4 rounded-xl shadow-soft"
      >
        <strong class="text-primary-600 relative">
          青春
          <span class="absolute bottom-0 left-0 w-full h-1 bg-primary-400 rounded-full"></span>
        </strong>を、もう一度
      </h1>
      <div class="mt-4 md:mt-6 ml-2">
        <a 
          href="/cast" 
          class="inline-block bg-gradient-to-r from-primary-500 to-accent-500 text-white px-6 py-3 rounded-full 
                shadow-md hover:shadow-lg transform hover:-translate-y-0.5 transition-all duration-300 
                font-medium text-sm md:text-base"
        >
          彼女を探す <i class="fa-solid fa-arrow-right ml-2"></i>
        </a>
      </div>
    </div>
  </div>

  <!-- ドットインジケーター -->
  <div id="dots" class="absolute bottom-8 w-full flex justify-center gap-3 z-20">
    {imageObjects.map((_, index) => (
      <div
        data-index={index}
        class="w-3 h-3 sm:w-4 sm:h-4 bg-white rounded-full cursor-pointer opacity-50 transition-all duration-300 shadow-md hover:scale-110"
      ></div>
    ))}
  </div>
</div>

<script>
  // ここから JavaScript 部分（Astro ではフロントマター以降に記述可能）
  if (typeof window !== 'undefined') {
    const images = document.querySelectorAll("#slideshow > div");
    const dots = document.querySelectorAll("#dots div");
    let currentIndex = 0;
    let interval;

    function updateSlides(index) {
      // 現在のスライドとドットの状態をリセット
      images[currentIndex].classList.remove("opacity-100");
      images[currentIndex].classList.add("opacity-0");
      dots[currentIndex].classList.remove("opacity-100");
      dots[currentIndex].classList.add("opacity-50");

      // 新しいスライドとドットを設定
      currentIndex = index;
      images[currentIndex].classList.remove("opacity-0");
      images[currentIndex].classList.add("opacity-100");
      dots[currentIndex].classList.remove("opacity-50");
      dots[currentIndex].classList.add("opacity-100");
    }

    function startAutoSlide() {
      interval = setInterval(() => {
        const nextIndex = (currentIndex + 1) % images.length;
        updateSlides(nextIndex);
      }, 5000);
    }

    function addDotClickHandlers() {
      dots.forEach((dot, index) => {
        dot.addEventListener("click", () => {
          clearInterval(interval); // 自動切り替えを一時停止
          updateSlides(index);     // クリックされたドットに対応するスライドを表示
          startAutoSlide();        // 自動切り替えを再開
        });
      });
    }

    // 初期化
    updateSlides(0);
    addDotClickHandlers();
    startAutoSlide();
  }
</script>

<style>
  /* 画像フェードアニメーション */
  #slideshow > div {
    transition: opacity 1.5s ease-in-out;
  }
  /* ドットがアクティブな状態のスタイル */
  #dots div.opacity-100 {
    opacity: 1;
    background-color: #fff;
    transform: scale(1.2);
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.7);
  }
</style>
